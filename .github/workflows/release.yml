name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  id-token: write

jobs:
  build-packages:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Verify tag matches version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          if [ "$TAG" != "v$VERSION" ]; then
            echo "Tag $TAG does not match version v$VERSION"
            exit 1
          fi
          echo "Tag $TAG matches version v$VERSION"
          
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install -e .
          
      - name: Build sdist and wheel
        run: |
          python -m build
          
      - name: Check package
        run: |
          python -m twine check dist/*.whl dist/*.tar.gz
          
      - name: Upload Python packages
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: |
            dist/*.whl
            dist/*.tar.gz
          retention-days: 30
          
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1

  build-executable:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -e .
          
      - name: Build Windows executable with PyInstaller
        run: |
          pyinstaller --name hwinfo-tui --onefile --console --paths src src/hwinfo_tui/main.py
          
      - name: Rename executable with version
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -match 'refs/tags/v(.+)') { 
            $ver = $Matches[1] 
          } else { 
            throw 'No version tag found' 
          }
          Rename-Item -Path dist/hwinfo-tui.exe -NewName "hwinfo-tui-$ver-windows-x64.exe"
          Write-Output "Renamed to hwinfo-tui-$ver-windows-x64.exe"
          
      - name: Test executable
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -match 'refs/tags/v(.+)') { 
            $ver = $Matches[1] 
          } else { 
            throw 'No version tag found' 
          }
          $exe = "dist/hwinfo-tui-$ver-windows-x64.exe"
          Write-Output "Testing executable: $exe"
          & $exe --help
          & $exe --version
          
      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: dist/hwinfo-tui-*-windows-x64.exe
          retention-days: 30

  create-release:
    needs: [build-packages, build-executable]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Python packages
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/
          
      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: dist/
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
            dist/hwinfo-tui-*-windows-x64.exe
          generate_release_notes: true
          draft: false
          prerelease: false